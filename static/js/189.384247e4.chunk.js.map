{"version":3,"file":"static/js/189.384247e4.chunk.js","mappings":"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","sources":["components/validationForms/validationForms.js","redux/filter/selectors.js","redux/contacts/selectors.js","components/hooks/useContacts.js","components/Loaders/BasicLoader/BasicLoader.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","pages/ContactsPage/ContactsPage.styled.js","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["export const validationFormPassword = value => {\n  if (value === '') return false;\n\n  return value.length < 7;\n};\n\nexport const validationContactsFormName = value => {\n  if (value === '') return false;\n\n  return !/^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/gi.test(\n    value\n  );\n};\n\nexport const validationContactsFormNumber = value => {\n  if (value === '') return false;\n\n  return !/\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/gi.test(\n    value\n  );\n};\n","export const selectFilter = state => state.filter;\n","export const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectIsLoadingBtn = state => state.contacts.isLoadingBtn;\nexport const selectError = state => state.contacts.error;\n","import { useSelector } from 'react-redux';\nimport {\n  selectContacts,\n  selectIsLoading,\n  selectIsLoadingBtn,\n  selectError,\n} from 'redux/contacts/selectors';\n\nexport const useContacts = () => {\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const isLoadingBtn = useSelector(selectIsLoadingBtn);\n  const error = useSelector(selectError);\n\n  return {\n    contacts,\n    isLoading,\n    isLoadingBtn,\n    error,\n  };\n};\n","import { ClipLoader } from 'react-spinners';\nimport { useTheme } from '@mui/material/styles';\n\nconst BasicLoader = () => {\n  const theme = useTheme();\n  const currentColor = theme.palette.mode === 'light' ? '#424242' : '#fafafa';\n\n  return (\n    <div style={{ textAlign: 'center' }}>\n      <ClipLoader color={currentColor} />\n    </div>\n  );\n};\n\nexport default BasicLoader;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useContacts } from 'components/hooks/useContacts';\nimport {\n  validationContactsFormName,\n  validationContactsFormNumber,\n} from 'components/validationForms/validationForms';\nimport { Box, TextField, Stack } from '@mui/material';\nimport LoadingButton from '@mui/lab/LoadingButton/LoadingButton';\nimport ControlPointIcon from '@mui/icons-material/ControlPoint';\n\nconst ContactForm = ({ onAddContact }) => {\n  const { isLoadingBtn } = useContacts();\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const validationName = validationContactsFormName(name);\n  const validationNumber = validationContactsFormNumber(number);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const data = {\n      name,\n      number,\n    };\n    onAddContact(data);\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <>\n      <Box component=\"form\" autoComplete=\"off\" onSubmit={handleSubmit}>\n        <Stack spacing={2} alignItems=\"center\" justifyContent=\"center\">\n          <TextField\n            id=\"outlined-basic\"\n            error={validationName}\n            helperText={\n              validationName &&\n              \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            }\n            label=\"Name\"\n            variant=\"outlined\"\n            color=\"secondary\"\n            type=\"text\"\n            value={name}\n            onChange={e => setName(e.target.value)}\n            required={true}\n            sx={{ width: '100%' }}\n          />\n          <TextField\n            error={validationNumber}\n            helperText={\n              validationNumber &&\n              'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n            }\n            id=\"outlined-basic\"\n            label=\"Number\"\n            variant=\"outlined\"\n            color=\"secondary\"\n            type=\"tel\"\n            value={number}\n            onChange={e => setNumber(e.target.value)}\n            required={true}\n            sx={{ width: '100%' }}\n          />\n\n          <LoadingButton\n            loadingPosition=\"end\"\n            variant=\"contained\"\n            endIcon={<ControlPointIcon />}\n            loading={isLoadingBtn}\n            color=\"secondary\"\n            type=\"submit\"\n            sx={{ width: '80%', color: 'common.white', fontWeight: '700' }}\n            disabled={validationName || validationNumber}\n          >\n            <span>Add Contact</span>\n          </LoadingButton>\n        </Stack>\n      </Box>\n    </>\n  );\n};\n\nContactForm.propTypes = {\n  onAddContact: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;\n","import PropTypes from 'prop-types';\nimport { TextField, Stack } from '@mui/material';\n\nconst Filter = ({ onFilter }) => {\n  return (\n    <Stack alignItems=\"center\">\n      <TextField\n        id=\"outlined-basic\"\n        label=\"Find contact by name...\"\n        variant=\"outlined\"\n        color=\"secondary\"\n        type=\"text\"\n        autoComplete=\"off\"\n        onChange={e => onFilter(e.target.value)}\n        sx={{ width: '80%' }}\n      />\n    </Stack>\n  );\n};\n\nFilter.propTypes = {\n  onFilter: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import styled from 'styled-components';\n\nexport const LinkNumber = styled.a`\n  display: inline-block;\n  padding: 3px 3px 3px 0;\n  text-decoration: none;\n  color: ${props => props.theme.palette.secondary.main};\n`;\n","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { deleteContact } from 'redux/contacts/operations';\nimport {\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  Avatar,\n  IconButton,\n  Grid,\n} from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport AccountBoxIcon from '@mui/icons-material/AccountBox';\nimport { LinkNumber } from './ContactList.styled';\n\nconst ContactList = ({ contacts }) => {\n  const dispatch = useDispatch();\n\n  const handleDelete = id =>\n    dispatch(deleteContact(id))\n      .unwrap()\n      .then(res => res)\n      .catch(() => toast.error(\"Error! Contact wasn't delete.\"));\n\n  return (\n    <>\n      <Grid item xs={12} md={6}>\n        <List>\n          {contacts.map(({ id, name, number }) => (\n            <ListItem\n              key={id}\n              secondaryAction={\n                <IconButton\n                  edge=\"end\"\n                  aria-label=\"delete\"\n                  onClick={() => handleDelete(id)}\n                >\n                  <DeleteIcon />\n                </IconButton>\n              }\n            >\n              <ListItemAvatar>\n                <Avatar>\n                  <AccountBoxIcon />\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText\n                primary={name}\n                secondary={\n                  <LinkNumber href={`tel:${number}`}>{number}</LinkNumber>\n                }\n              />\n            </ListItem>\n          ))}\n        </List>\n      </Grid>\n    </>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default ContactList;\n","import styled from 'styled-components';\n\nexport const Section = styled.section`\n  padding: 110px 0 0 0;\n\n  > *:not(:last-child) {\n    margin-bottom: 30px;\n  }\n`;\n\nexport const Title = styled.h2`\n  margin: 0;\n  text-align: center;\n`;\n\nexport const PlaceholderEmptyList = styled.p`\n  display: flex;\n  align-items: center;\n  margin: 0;\n  font-size: 21px;\n`;\n","import { useEffect } from 'react';\nimport { toast } from 'react-toastify';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectFilter } from 'redux/filter/selectors';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { addContact } from 'redux/contacts/operations';\nimport { filter } from 'redux/filter/filterSlice';\nimport PermContactCalendarIcon from '@mui/icons-material/PermContactCalendar';\nimport { useContacts } from 'components/hooks/useContacts';\nimport BasicLoader from 'components/Loaders/BasicLoader/BasicLoader';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport Filter from 'components/Filter/Filter';\nimport ContactList from 'components/ContactList/ContactList';\nimport { Section, Title, PlaceholderEmptyList } from './ContactsPage.styled';\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n  const { contacts, isLoading } = useContacts();\n  const filteredValue = useSelector(selectFilter);\n\n  useEffect(() => {\n    dispatch(fetchContacts())\n      .unwrap()\n      .then(res => res)\n      .catch(() => toast.error(\"Error! Can't download contacts\"));\n  }, [dispatch]);\n\n  const handleAddContact = newContact => {\n    const find = contacts.some(\n      ({ name }) => name.toLowerCase() === newContact.name.toLowerCase()\n    );\n\n    if (find) {\n      toast.warn(`${newContact.name} is already in contacts.`);\n      return;\n    }\n\n    dispatch(addContact(newContact))\n      .unwrap()\n      .then(res => res)\n      .catch(() => toast.error(\"Error! Can't add contacts\"));\n  };\n\n  const handleFilter = value => {\n    dispatch(filter(value));\n  };\n\n  const filteredContacts = contacts.filter(({ name }) =>\n    name.toLowerCase().includes(filteredValue.toLowerCase())\n  );\n\n  return (\n    <main>\n      <Section>\n        <Title>Phonebook</Title>\n        <ContactForm onAddContact={handleAddContact} />\n        <Title>My Contacts</Title>\n        <Filter onFilter={handleFilter} />\n        {isLoading && <BasicLoader />}\n        {contacts.length > 0 ? (\n          <ContactList contacts={filteredContacts} />\n        ) : (\n          <PlaceholderEmptyList>\n            There are no contacts here{' '}\n            <PermContactCalendarIcon sx={{ ml: 1 }} />\n          </PlaceholderEmptyList>\n        )}\n      </Section>\n    </main>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["validationFormPassword","value","length","validationContactsFormName","test","validationContactsFormNumber","selectFilter","state","filter","selectContacts","contacts","items","selectIsLoading","isLoading","selectIsLoadingBtn","isLoadingBtn","selectError","error","useContacts","useSelector","currentColor","useTheme","palette","mode","style","textAlign","ClipLoader","color","onAddContact","useState","name","setName","number","setNumber","validationName","validationNumber","reset","Box","component","autoComplete","onSubmit","e","preventDefault","Stack","spacing","alignItems","justifyContent","TextField","id","helperText","label","variant","type","onChange","target","required","sx","width","LoadingButton","loadingPosition","endIcon","ControlPoint","loading","fontWeight","disabled","onFilter","LinkNumber","styled","props","theme","secondary","main","dispatch","useDispatch","Grid","item","xs","md","List","map","ListItem","secondaryAction","IconButton","edge","onClick","deleteContact","unwrap","then","res","catch","toast","handleDelete","Delete","ListItemAvatar","Avatar","AccountBox","ListItemText","primary","href","Section","Title","PlaceholderEmptyList","filteredValue","useEffect","fetchContacts","filteredContacts","toLowerCase","includes","newContact","some","addContact","PermContactCalendar","ml"],"sourceRoot":""}